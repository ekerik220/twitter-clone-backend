scalar EmailAddress
scalar Timestamp
scalar Date

extend type Query {
  users: [User]!
  """
  Checks if a user exists with given email.
  """
  emailTaken(email: String!): Boolean!

  """
  Checks if a user with given username exists.
  """
  usernameTaken(username: String!): Boolean!
}

type User @entity {
  id: ID @id
  email: EmailAddress! @column
  username: String! @column
  birthdate: Date! @column
  password: String! @column
}

type UnconfirmedUser @entity {
  id: ID @id
  email: EmailAddress! @column
  username: String! @column
  birthdate: Date! @column
  confirmed: Boolean! @column
  confirmationCode: String! @column
  timestamp: Timestamp! @column
}
