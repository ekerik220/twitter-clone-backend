scalar EmailAddress
scalar Timestamp
scalar Date

extend type Query {
  """
  Gets the currently logged in user
  """
  self: User!

  users: [User]!
  """
  Checks if a user exists with given email.
  """
  emailTaken(email: String!): Boolean!

  """
  Checks if a user with given username exists.
  """
  usernameTaken(username: String!): Boolean!
}

extend type Mutation {
  setAvatarImage(file: Upload!): User!
}

type User @entity {
  id: ID @id
  email: EmailAddress! @column
  username: String! @column
  birthdate: Date! @column
  password: String! @column
  avatar: String @column
  handle: String! @column
  tweetIDs: [String]! @column
  retweetIDs: [ID]! @column
  retweetParentIDs: [ID]! @column
  mentionIDs: [ID]! @column
  """
  Gets all the tweets in user's tweet list
  """
  tweets(getRetweets: Boolean): [Tweet]
}

type UnconfirmedUser @entity {
  id: ID @id
  email: EmailAddress! @column
  username: String! @column
  birthdate: Date! @column
  confirmed: Boolean! @column
  confirmationCode: String! @column
  timestamp: Timestamp! @column
}

type UploadFileResponse {
  filename: String!
  mimetype: String!
  encoding: String!
  url: String!
}
